// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: delivery/proto/3party/3party.proto

package openapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *TestingRequest) Reset() {
	*x = TestingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_proto_3party_3party_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestingRequest) ProtoMessage() {}

func (x *TestingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_proto_3party_3party_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestingRequest.ProtoReflect.Descriptor instead.
func (*TestingRequest) Descriptor() ([]byte, []int) {
	return file_delivery_proto_3party_3party_proto_rawDescGZIP(), []int{0}
}

func (x *TestingRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type TestingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *TestingResponse) Reset() {
	*x = TestingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_proto_3party_3party_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestingResponse) ProtoMessage() {}

func (x *TestingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_proto_3party_3party_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestingResponse.ProtoReflect.Descriptor instead.
func (*TestingResponse) Descriptor() ([]byte, []int) {
	return file_delivery_proto_3party_3party_proto_rawDescGZIP(), []int{1}
}

func (x *TestingResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type VerificationSIKPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	KtpNumber string `protobuf:"bytes,2,opt,name=ktpNumber,proto3" json:"ktpNumber,omitempty"`
}

func (x *VerificationSIKPRequest) Reset() {
	*x = VerificationSIKPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_proto_3party_3party_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationSIKPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationSIKPRequest) ProtoMessage() {}

func (x *VerificationSIKPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_proto_3party_3party_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationSIKPRequest.ProtoReflect.Descriptor instead.
func (*VerificationSIKPRequest) Descriptor() ([]byte, []int) {
	return file_delivery_proto_3party_3party_proto_rawDescGZIP(), []int{2}
}

func (x *VerificationSIKPRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *VerificationSIKPRequest) GetKtpNumber() string {
	if x != nil {
		return x.KtpNumber
	}
	return ""
}

type VerificationSIKPReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                    int64                      `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message                   string                     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	MessageLocal              string                     `protobuf:"bytes,3,opt,name=messageLocal,proto3" json:"messageLocal,omitempty"`
	EmbedDataVerificationSIKP *EmbedDataVerificationSIKP `protobuf:"bytes,4,opt,name=EmbedDataVerificationSIKP,proto3" json:"EmbedDataVerificationSIKP,omitempty"`
}

func (x *VerificationSIKPReponse) Reset() {
	*x = VerificationSIKPReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_proto_3party_3party_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationSIKPReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationSIKPReponse) ProtoMessage() {}

func (x *VerificationSIKPReponse) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_proto_3party_3party_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationSIKPReponse.ProtoReflect.Descriptor instead.
func (*VerificationSIKPReponse) Descriptor() ([]byte, []int) {
	return file_delivery_proto_3party_3party_proto_rawDescGZIP(), []int{3}
}

func (x *VerificationSIKPReponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *VerificationSIKPReponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VerificationSIKPReponse) GetMessageLocal() string {
	if x != nil {
		return x.MessageLocal
	}
	return ""
}

func (x *VerificationSIKPReponse) GetEmbedDataVerificationSIKP() *EmbedDataVerificationSIKP {
	if x != nil {
		return x.EmbedDataVerificationSIKP
	}
	return nil
}

type EmbedDataVerificationSIKP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode           int64                 `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	StatusDescription    string                `protobuf:"bytes,2,opt,name=statusDescription,proto3" json:"statusDescription,omitempty"`
	DataVerificationSIKP *DataVerificationSIKP `protobuf:"bytes,3,opt,name=DataVerificationSIKP,proto3" json:"DataVerificationSIKP,omitempty"`
}

func (x *EmbedDataVerificationSIKP) Reset() {
	*x = EmbedDataVerificationSIKP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_proto_3party_3party_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbedDataVerificationSIKP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbedDataVerificationSIKP) ProtoMessage() {}

func (x *EmbedDataVerificationSIKP) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_proto_3party_3party_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbedDataVerificationSIKP.ProtoReflect.Descriptor instead.
func (*EmbedDataVerificationSIKP) Descriptor() ([]byte, []int) {
	return file_delivery_proto_3party_3party_proto_rawDescGZIP(), []int{4}
}

func (x *EmbedDataVerificationSIKP) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *EmbedDataVerificationSIKP) GetStatusDescription() string {
	if x != nil {
		return x.StatusDescription
	}
	return ""
}

func (x *EmbedDataVerificationSIKP) GetDataVerificationSIKP() *DataVerificationSIKP {
	if x != nil {
		return x.DataVerificationSIKP
	}
	return nil
}

type DataVerificationSIKP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankCode   string `protobuf:"bytes,1,opt,name=bankCode,proto3" json:"bankCode,omitempty"`
	UploadDate string `protobuf:"bytes,2,opt,name=uploadDate,proto3" json:"uploadDate,omitempty"`
}

func (x *DataVerificationSIKP) Reset() {
	*x = DataVerificationSIKP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_proto_3party_3party_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataVerificationSIKP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataVerificationSIKP) ProtoMessage() {}

func (x *DataVerificationSIKP) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_proto_3party_3party_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataVerificationSIKP.ProtoReflect.Descriptor instead.
func (*DataVerificationSIKP) Descriptor() ([]byte, []int) {
	return file_delivery_proto_3party_3party_proto_rawDescGZIP(), []int{5}
}

func (x *DataVerificationSIKP) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *DataVerificationSIKP) GetUploadDate() string {
	if x != nil {
		return x.UploadDate
	}
	return ""
}

type CheckPlafondSIKPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	KtpNumber string `protobuf:"bytes,2,opt,name=ktpNumber,proto3" json:"ktpNumber,omitempty"`
}

func (x *CheckPlafondSIKPRequest) Reset() {
	*x = CheckPlafondSIKPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_proto_3party_3party_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPlafondSIKPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPlafondSIKPRequest) ProtoMessage() {}

func (x *CheckPlafondSIKPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_proto_3party_3party_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPlafondSIKPRequest.ProtoReflect.Descriptor instead.
func (*CheckPlafondSIKPRequest) Descriptor() ([]byte, []int) {
	return file_delivery_proto_3party_3party_proto_rawDescGZIP(), []int{6}
}

func (x *CheckPlafondSIKPRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CheckPlafondSIKPRequest) GetKtpNumber() string {
	if x != nil {
		return x.KtpNumber
	}
	return ""
}

type CheckPlafondSIKPReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                    int64                      `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message                   string                     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	MessageLocal              string                     `protobuf:"bytes,3,opt,name=messageLocal,proto3" json:"messageLocal,omitempty"`
	EmbedDataCheckPlafondSIKP *EmbedDataCheckPlafondSIKP `protobuf:"bytes,4,opt,name=EmbedDataCheckPlafondSIKP,proto3" json:"EmbedDataCheckPlafondSIKP,omitempty"`
}

func (x *CheckPlafondSIKPReponse) Reset() {
	*x = CheckPlafondSIKPReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_proto_3party_3party_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPlafondSIKPReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPlafondSIKPReponse) ProtoMessage() {}

func (x *CheckPlafondSIKPReponse) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_proto_3party_3party_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPlafondSIKPReponse.ProtoReflect.Descriptor instead.
func (*CheckPlafondSIKPReponse) Descriptor() ([]byte, []int) {
	return file_delivery_proto_3party_3party_proto_rawDescGZIP(), []int{7}
}

func (x *CheckPlafondSIKPReponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CheckPlafondSIKPReponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CheckPlafondSIKPReponse) GetMessageLocal() string {
	if x != nil {
		return x.MessageLocal
	}
	return ""
}

func (x *CheckPlafondSIKPReponse) GetEmbedDataCheckPlafondSIKP() *EmbedDataCheckPlafondSIKP {
	if x != nil {
		return x.EmbedDataCheckPlafondSIKP
	}
	return nil
}

type EmbedDataCheckPlafondSIKP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode           int64                   `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	StatusDescription    string                  `protobuf:"bytes,2,opt,name=statusDescription,proto3" json:"statusDescription,omitempty"`
	DataCheckPlafondSIKP []*DataCheckPlafondSIKP `protobuf:"bytes,3,rep,name=DataCheckPlafondSIKP,proto3" json:"DataCheckPlafondSIKP,omitempty"`
}

func (x *EmbedDataCheckPlafondSIKP) Reset() {
	*x = EmbedDataCheckPlafondSIKP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_proto_3party_3party_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbedDataCheckPlafondSIKP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbedDataCheckPlafondSIKP) ProtoMessage() {}

func (x *EmbedDataCheckPlafondSIKP) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_proto_3party_3party_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbedDataCheckPlafondSIKP.ProtoReflect.Descriptor instead.
func (*EmbedDataCheckPlafondSIKP) Descriptor() ([]byte, []int) {
	return file_delivery_proto_3party_3party_proto_rawDescGZIP(), []int{8}
}

func (x *EmbedDataCheckPlafondSIKP) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *EmbedDataCheckPlafondSIKP) GetStatusDescription() string {
	if x != nil {
		return x.StatusDescription
	}
	return ""
}

func (x *EmbedDataCheckPlafondSIKP) GetDataCheckPlafondSIKP() []*DataCheckPlafondSIKP {
	if x != nil {
		return x.DataCheckPlafondSIKP
	}
	return nil
}

type DataCheckPlafondSIKP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KtpNumber          string `protobuf:"bytes,1,opt,name=ktpNumber,proto3" json:"ktpNumber,omitempty"`
	Scheme             int64  `protobuf:"varint,2,opt,name=scheme,proto3" json:"scheme,omitempty"`
	TotalLimitDefault  int64  `protobuf:"varint,3,opt,name=totalLimitDefault,proto3" json:"totalLimitDefault,omitempty"`
	TotalLimit         int64  `protobuf:"varint,4,opt,name=totalLimit,proto3" json:"totalLimit,omitempty"`
	LimitActiveDefault int64  `protobuf:"varint,5,opt,name=limitActiveDefault,proto3" json:"limitActiveDefault,omitempty"`
	LimitActive        int64  `protobuf:"varint,6,opt,name=limitActive,proto3" json:"limitActive,omitempty"`
	BankCode           int64  `protobuf:"varint,7,opt,name=bankCode,proto3" json:"bankCode,omitempty"`
}

func (x *DataCheckPlafondSIKP) Reset() {
	*x = DataCheckPlafondSIKP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_proto_3party_3party_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataCheckPlafondSIKP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataCheckPlafondSIKP) ProtoMessage() {}

func (x *DataCheckPlafondSIKP) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_proto_3party_3party_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataCheckPlafondSIKP.ProtoReflect.Descriptor instead.
func (*DataCheckPlafondSIKP) Descriptor() ([]byte, []int) {
	return file_delivery_proto_3party_3party_proto_rawDescGZIP(), []int{9}
}

func (x *DataCheckPlafondSIKP) GetKtpNumber() string {
	if x != nil {
		return x.KtpNumber
	}
	return ""
}

func (x *DataCheckPlafondSIKP) GetScheme() int64 {
	if x != nil {
		return x.Scheme
	}
	return 0
}

func (x *DataCheckPlafondSIKP) GetTotalLimitDefault() int64 {
	if x != nil {
		return x.TotalLimitDefault
	}
	return 0
}

func (x *DataCheckPlafondSIKP) GetTotalLimit() int64 {
	if x != nil {
		return x.TotalLimit
	}
	return 0
}

func (x *DataCheckPlafondSIKP) GetLimitActiveDefault() int64 {
	if x != nil {
		return x.LimitActiveDefault
	}
	return 0
}

func (x *DataCheckPlafondSIKP) GetLimitActive() int64 {
	if x != nil {
		return x.LimitActive
	}
	return 0
}

func (x *DataCheckPlafondSIKP) GetBankCode() int64 {
	if x != nil {
		return x.BankCode
	}
	return 0
}

// Jamkrindo Klaim
type JamkrindoKlaimRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CabangRekanan      string `protobuf:"bytes,1,opt,name=CabangRekanan,proto3" json:"CabangRekanan,omitempty"`
	JenisAgunan        string `protobuf:"bytes,2,opt,name=JenisAgunan,proto3" json:"JenisAgunan,omitempty"`
	JenisKredit        string `protobuf:"bytes,3,opt,name=JenisKredit,proto3" json:"JenisKredit,omitempty"`
	JenisKur           string `protobuf:"bytes,4,opt,name=JenisKur,proto3" json:"JenisKur,omitempty"`
	JenisPengikatan    string `protobuf:"bytes,5,opt,name=JenisPengikatan,proto3" json:"JenisPengikatan,omitempty"`
	JumlahKerugian     string `protobuf:"bytes,6,opt,name=JumlahKerugian,proto3" json:"JumlahKerugian,omitempty"`
	KodeBank           string `protobuf:"bytes,7,opt,name=KodeBank,proto3" json:"KodeBank,omitempty"`
	KodeLbu            string `protobuf:"bytes,8,opt,name=KodeLbu,proto3" json:"KodeLbu,omitempty"`
	KodeUker           string `protobuf:"bytes,9,opt,name=KodeUker,proto3" json:"KodeUker,omitempty"`
	NamaDebitur        string `protobuf:"bytes,10,opt,name=NamaDebitur,proto3" json:"NamaDebitur,omitempty"`
	NilaiPengikatan    string `protobuf:"bytes,11,opt,name=NilaiPengikatan,proto3" json:"NilaiPengikatan,omitempty"`
	NilaiPenjaminan    string `protobuf:"bytes,12,opt,name=NilaiPenjaminan,proto3" json:"NilaiPenjaminan,omitempty"`
	NilaiPersen        string `protobuf:"bytes,13,opt,name=NilaiPersen,proto3" json:"NilaiPersen,omitempty"`
	NilaiTuntutanKlaim string `protobuf:"bytes,14,opt,name=NilaiTuntutanKlaim,proto3" json:"NilaiTuntutanKlaim,omitempty"`
	NoRekening         string `protobuf:"bytes,15,opt,name=NoRekening,proto3" json:"NoRekening,omitempty"`
	NoSp2              string `protobuf:"bytes,16,opt,name=NoSp2,proto3" json:"NoSp2,omitempty"`
	NoSpk              string `protobuf:"bytes,17,opt,name=NoSpk,proto3" json:"NoSpk,omitempty"`
	NomorPk            string `protobuf:"bytes,18,opt,name=NomorPk,proto3" json:"NomorPk,omitempty"`
	NomorSsertifikat   string `protobuf:"bytes,19,opt,name=NomorSsertifikat,proto3" json:"NomorSsertifikat,omitempty"`
	PenggunaanKredit   string `protobuf:"bytes,20,opt,name=PenggunaanKredit,proto3" json:"PenggunaanKredit,omitempty"`
	Periode            string `protobuf:"bytes,21,opt,name=Periode,proto3" json:"Periode,omitempty"`
	Plafond            string `protobuf:"bytes,22,opt,name=Plafond,proto3" json:"Plafond,omitempty"`
	SebabKlaim         string `protobuf:"bytes,23,opt,name=SebabKlaim,proto3" json:"SebabKlaim,omitempty"`
	TglJatuhTempo      string `protobuf:"bytes,24,opt,name=TglJatuhTempo,proto3" json:"TglJatuhTempo,omitempty"`
	TglMulai           string `protobuf:"bytes,25,opt,name=TglMulai,proto3" json:"TglMulai,omitempty"`
	TglSp2             string `protobuf:"bytes,26,opt,name=TglSp2,proto3" json:"TglSp2,omitempty"`
	TglSpk             string `protobuf:"bytes,27,opt,name=TglSpk,proto3" json:"TglSpk,omitempty"`
	TglSsertifikat     string `protobuf:"bytes,28,opt,name=TglSsertifikat,proto3" json:"TglSsertifikat,omitempty"`
	TglStatus          string `protobuf:"bytes,29,opt,name=TglStatus,proto3" json:"TglStatus,omitempty"`
	Tindakan1          string `protobuf:"bytes,30,opt,name=Tindakan1,proto3" json:"Tindakan1,omitempty"`
	Tindakan2          string `protobuf:"bytes,31,opt,name=Tindakan2,proto3" json:"Tindakan2,omitempty"`
	Tindakan3          string `protobuf:"bytes,32,opt,name=Tindakan3,proto3" json:"Tindakan3,omitempty"`
	Tindakan4          string `protobuf:"bytes,33,opt,name=Tindakan4,proto3" json:"Tindakan4,omitempty"`
	Tindakan5          string `protobuf:"bytes,34,opt,name=Tindakan5,proto3" json:"Tindakan5,omitempty"`
	TunggakanBunga     string `protobuf:"bytes,35,opt,name=TunggakanBunga,proto3" json:"TunggakanBunga,omitempty"`
	TunggakanDenda     string `protobuf:"bytes,36,opt,name=TunggakanDenda,proto3" json:"TunggakanDenda,omitempty"`
	TunggakanPokok     string `protobuf:"bytes,37,opt,name=TunggakanPokok,proto3" json:"TunggakanPokok,omitempty"`
}

func (x *JamkrindoKlaimRequest) Reset() {
	*x = JamkrindoKlaimRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_proto_3party_3party_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JamkrindoKlaimRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JamkrindoKlaimRequest) ProtoMessage() {}

func (x *JamkrindoKlaimRequest) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_proto_3party_3party_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JamkrindoKlaimRequest.ProtoReflect.Descriptor instead.
func (*JamkrindoKlaimRequest) Descriptor() ([]byte, []int) {
	return file_delivery_proto_3party_3party_proto_rawDescGZIP(), []int{10}
}

func (x *JamkrindoKlaimRequest) GetCabangRekanan() string {
	if x != nil {
		return x.CabangRekanan
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetJenisAgunan() string {
	if x != nil {
		return x.JenisAgunan
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetJenisKredit() string {
	if x != nil {
		return x.JenisKredit
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetJenisKur() string {
	if x != nil {
		return x.JenisKur
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetJenisPengikatan() string {
	if x != nil {
		return x.JenisPengikatan
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetJumlahKerugian() string {
	if x != nil {
		return x.JumlahKerugian
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetKodeBank() string {
	if x != nil {
		return x.KodeBank
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetKodeLbu() string {
	if x != nil {
		return x.KodeLbu
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetKodeUker() string {
	if x != nil {
		return x.KodeUker
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetNamaDebitur() string {
	if x != nil {
		return x.NamaDebitur
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetNilaiPengikatan() string {
	if x != nil {
		return x.NilaiPengikatan
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetNilaiPenjaminan() string {
	if x != nil {
		return x.NilaiPenjaminan
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetNilaiPersen() string {
	if x != nil {
		return x.NilaiPersen
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetNilaiTuntutanKlaim() string {
	if x != nil {
		return x.NilaiTuntutanKlaim
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetNoRekening() string {
	if x != nil {
		return x.NoRekening
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetNoSp2() string {
	if x != nil {
		return x.NoSp2
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetNoSpk() string {
	if x != nil {
		return x.NoSpk
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetNomorPk() string {
	if x != nil {
		return x.NomorPk
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetNomorSsertifikat() string {
	if x != nil {
		return x.NomorSsertifikat
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetPenggunaanKredit() string {
	if x != nil {
		return x.PenggunaanKredit
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetPeriode() string {
	if x != nil {
		return x.Periode
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetPlafond() string {
	if x != nil {
		return x.Plafond
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetSebabKlaim() string {
	if x != nil {
		return x.SebabKlaim
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetTglJatuhTempo() string {
	if x != nil {
		return x.TglJatuhTempo
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetTglMulai() string {
	if x != nil {
		return x.TglMulai
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetTglSp2() string {
	if x != nil {
		return x.TglSp2
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetTglSpk() string {
	if x != nil {
		return x.TglSpk
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetTglSsertifikat() string {
	if x != nil {
		return x.TglSsertifikat
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetTglStatus() string {
	if x != nil {
		return x.TglStatus
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetTindakan1() string {
	if x != nil {
		return x.Tindakan1
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetTindakan2() string {
	if x != nil {
		return x.Tindakan2
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetTindakan3() string {
	if x != nil {
		return x.Tindakan3
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetTindakan4() string {
	if x != nil {
		return x.Tindakan4
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetTindakan5() string {
	if x != nil {
		return x.Tindakan5
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetTunggakanBunga() string {
	if x != nil {
		return x.TunggakanBunga
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetTunggakanDenda() string {
	if x != nil {
		return x.TunggakanDenda
	}
	return ""
}

func (x *JamkrindoKlaimRequest) GetTunggakanPokok() string {
	if x != nil {
		return x.TunggakanPokok
	}
	return ""
}

type JamkrindoKlaimResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status              int64                `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message             string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	MessageLocal        string               `protobuf:"bytes,3,opt,name=messageLocal,proto3" json:"messageLocal,omitempty"`
	EmbedJamkrindoKlaim *EmbedJamkrindoKlaim `protobuf:"bytes,4,opt,name=EmbedJamkrindoKlaim,proto3" json:"EmbedJamkrindoKlaim,omitempty"`
}

func (x *JamkrindoKlaimResponse) Reset() {
	*x = JamkrindoKlaimResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_proto_3party_3party_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JamkrindoKlaimResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JamkrindoKlaimResponse) ProtoMessage() {}

func (x *JamkrindoKlaimResponse) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_proto_3party_3party_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JamkrindoKlaimResponse.ProtoReflect.Descriptor instead.
func (*JamkrindoKlaimResponse) Descriptor() ([]byte, []int) {
	return file_delivery_proto_3party_3party_proto_rawDescGZIP(), []int{11}
}

func (x *JamkrindoKlaimResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *JamkrindoKlaimResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *JamkrindoKlaimResponse) GetMessageLocal() string {
	if x != nil {
		return x.MessageLocal
	}
	return ""
}

func (x *JamkrindoKlaimResponse) GetEmbedJamkrindoKlaim() *EmbedJamkrindoKlaim {
	if x != nil {
		return x.EmbedJamkrindoKlaim
	}
	return nil
}

type EmbedJamkrindoKlaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode         int64                 `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	StatusDescription  string                `protobuf:"bytes,2,opt,name=statusDescription,proto3" json:"statusDescription,omitempty"`
	DataJamkrindoKlaim []*DataJamkrindoKlaim `protobuf:"bytes,3,rep,name=DataJamkrindoKlaim,proto3" json:"DataJamkrindoKlaim,omitempty"`
}

func (x *EmbedJamkrindoKlaim) Reset() {
	*x = EmbedJamkrindoKlaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_proto_3party_3party_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbedJamkrindoKlaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbedJamkrindoKlaim) ProtoMessage() {}

func (x *EmbedJamkrindoKlaim) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_proto_3party_3party_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbedJamkrindoKlaim.ProtoReflect.Descriptor instead.
func (*EmbedJamkrindoKlaim) Descriptor() ([]byte, []int) {
	return file_delivery_proto_3party_3party_proto_rawDescGZIP(), []int{12}
}

func (x *EmbedJamkrindoKlaim) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *EmbedJamkrindoKlaim) GetStatusDescription() string {
	if x != nil {
		return x.StatusDescription
	}
	return ""
}

func (x *EmbedJamkrindoKlaim) GetDataJamkrindoKlaim() []*DataJamkrindoKlaim {
	if x != nil {
		return x.DataJamkrindoKlaim
	}
	return nil
}

type DataJamkrindoKlaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlagStatus      string `protobuf:"bytes,1,opt,name=FlagStatus,proto3" json:"FlagStatus,omitempty"`
	NomorRespond    string `protobuf:"bytes,2,opt,name=NomorRespond,proto3" json:"NomorRespond,omitempty"`
	TglRespondKlaim string `protobuf:"bytes,3,opt,name=TglRespondKlaim,proto3" json:"TglRespondKlaim,omitempty"`
}

func (x *DataJamkrindoKlaim) Reset() {
	*x = DataJamkrindoKlaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_proto_3party_3party_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataJamkrindoKlaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataJamkrindoKlaim) ProtoMessage() {}

func (x *DataJamkrindoKlaim) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_proto_3party_3party_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataJamkrindoKlaim.ProtoReflect.Descriptor instead.
func (*DataJamkrindoKlaim) Descriptor() ([]byte, []int) {
	return file_delivery_proto_3party_3party_proto_rawDescGZIP(), []int{13}
}

func (x *DataJamkrindoKlaim) GetFlagStatus() string {
	if x != nil {
		return x.FlagStatus
	}
	return ""
}

func (x *DataJamkrindoKlaim) GetNomorRespond() string {
	if x != nil {
		return x.NomorRespond
	}
	return ""
}

func (x *DataJamkrindoKlaim) GetTglRespondKlaim() string {
	if x != nil {
		return x.TglRespondKlaim
	}
	return ""
}

// submit Jamkrindo Calon
type SubmitJamkrindoCalonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlamatDebitur        string `protobuf:"bytes,1,opt,name=AlamatDebitur,proto3" json:"AlamatDebitur,omitempty"`
	AlamatUsaha          string `protobuf:"bytes,2,opt,name=AlamatUsaha,proto3" json:"AlamatUsaha,omitempty"`
	CabangRekanan        string `protobuf:"bytes,3,opt,name=CabangRekanan,proto3" json:"CabangRekanan,omitempty"`
	Cif                  string `protobuf:"bytes,4,opt,name=Cif,proto3" json:"Cif,omitempty"`
	Coverage             string `protobuf:"bytes,5,opt,name=Coverage,proto3" json:"Coverage,omitempty"`
	FlagTransfer         string `protobuf:"bytes,6,opt,name=FlagTransfer,proto3" json:"FlagTransfer,omitempty"`
	IDCalonDebiturKur    string `protobuf:"bytes,7,opt,name=IDCalonDebiturKur,proto3" json:"IDCalonDebiturKur,omitempty"`
	JangkaWaktu          string `protobuf:"bytes,8,opt,name=JangkaWaktu,proto3" json:"JangkaWaktu,omitempty"`
	JenisAgunan          string `protobuf:"bytes,9,opt,name=JenisAgunan,proto3" json:"JenisAgunan,omitempty"`
	JenisIdentitas       string `protobuf:"bytes,10,opt,name=JenisIdentitas,proto3" json:"JenisIdentitas,omitempty"`
	JenisKelamin         string `protobuf:"bytes,11,opt,name=JenisKelamin,proto3" json:"JenisKelamin,omitempty"`
	JenisKredit          string `protobuf:"bytes,12,opt,name=JenisKredit,proto3" json:"JenisKredit,omitempty"`
	JenisKur             string `protobuf:"bytes,13,opt,name=JenisKur,proto3" json:"JenisKur,omitempty"`
	JenisLinkage         string `protobuf:"bytes,14,opt,name=JenisLinkage,proto3" json:"JenisLinkage,omitempty"`
	JenisPengikatan      string `protobuf:"bytes,15,opt,name=JenisPengikatan,proto3" json:"JenisPengikatan,omitempty"`
	JmlTKerja            string `protobuf:"bytes,16,opt,name=JmlTKerja,proto3" json:"JmlTKerja,omitempty"`
	KodeBank             string `protobuf:"bytes,17,opt,name=KodeBank,proto3" json:"KodeBank,omitempty"`
	KodePekerjaan        string `protobuf:"bytes,18,opt,name=KodePekerjaan,proto3" json:"KodePekerjaan,omitempty"`
	KodePos              string `protobuf:"bytes,19,opt,name=KodePos,proto3" json:"KodePos,omitempty"`
	KodeSektor           string `protobuf:"bytes,20,opt,name=KodeSektor,proto3" json:"KodeSektor,omitempty"`
	KodeUker             string `protobuf:"bytes,21,opt,name=KodeUker,proto3" json:"KodeUker,omitempty"`
	LembagaLinkage       string `protobuf:"bytes,22,opt,name=LembagaLinkage,proto3" json:"LembagaLinkage,omitempty"`
	ModalUsaha           string `protobuf:"bytes,23,opt,name=ModalUsaha,proto3" json:"ModalUsaha,omitempty"`
	NamaDebitur          string `protobuf:"bytes,24,opt,name=NamaDebitur,proto3" json:"NamaDebitur,omitempty"`
	NilaiAgunan          string `protobuf:"bytes,25,opt,name=NilaiAgunan,proto3" json:"NilaiAgunan,omitempty"`
	NoHp                 string `protobuf:"bytes,26,opt,name=NoHp,proto3" json:"NoHp,omitempty"`
	NoIdentitas          string `protobuf:"bytes,27,opt,name=NoIdentitas,proto3" json:"NoIdentitas,omitempty"`
	NoIjinUsaha          string `protobuf:"bytes,28,opt,name=NoIjinUsaha,proto3" json:"NoIjinUsaha,omitempty"`
	NoPk                 string `protobuf:"bytes,29,opt,name=NoPk,proto3" json:"NoPk,omitempty"`
	NoRekening           string `protobuf:"bytes,30,opt,name=NoRekening,proto3" json:"NoRekening,omitempty"`
	NoTelepon            string `protobuf:"bytes,31,opt,name=NoTelepon,proto3" json:"NoTelepon,omitempty"`
	NomorAplikasi        string `protobuf:"bytes,32,opt,name=NomorAplikasi,proto3" json:"NomorAplikasi,omitempty"`
	Npwp                 string `protobuf:"bytes,33,opt,name=Npwp,proto3" json:"Npwp,omitempty"`
	PlafonKredit         string `protobuf:"bytes,34,opt,name=PlafonKredit,proto3" json:"PlafonKredit,omitempty"`
	StatusAplikasi       string `protobuf:"bytes,35,opt,name=StatusAplikasi,proto3" json:"StatusAplikasi,omitempty"`
	StatusKolektibilitas string `protobuf:"bytes,36,opt,name=StatusKolektibilitas,proto3" json:"StatusKolektibilitas,omitempty"`
	StatusLunas          string `protobuf:"bytes,37,opt,name=StatusLunas,proto3" json:"StatusLunas,omitempty"`
	SukuBunga            string `protobuf:"bytes,38,opt,name=SukuBunga,proto3" json:"SukuBunga,omitempty"`
	TanggalAkhir         string `protobuf:"bytes,39,opt,name=TanggalAkhir,proto3" json:"TanggalAkhir,omitempty"`
	TanggalAwal          string `protobuf:"bytes,40,opt,name=TanggalAwal,proto3" json:"TanggalAwal,omitempty"`
	TanggalLahir         string `protobuf:"bytes,41,opt,name=TanggalLahir,proto3" json:"TanggalLahir,omitempty"`
	TanggalMulaiUsaha    string `protobuf:"bytes,42,opt,name=TanggalMulaiUsaha,proto3" json:"TanggalMulaiUsaha,omitempty"`
	TanggalPk            string `protobuf:"bytes,43,opt,name=TanggalPk,proto3" json:"TanggalPk,omitempty"`
	TanggalRekam         string `protobuf:"bytes,44,opt,name=TanggalRekam,proto3" json:"TanggalRekam,omitempty"`
	UsahaProduktif       string `protobuf:"bytes,45,opt,name=UsahaProduktif,proto3" json:"UsahaProduktif,omitempty"`
}

func (x *SubmitJamkrindoCalonRequest) Reset() {
	*x = SubmitJamkrindoCalonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_proto_3party_3party_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitJamkrindoCalonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitJamkrindoCalonRequest) ProtoMessage() {}

func (x *SubmitJamkrindoCalonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_proto_3party_3party_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitJamkrindoCalonRequest.ProtoReflect.Descriptor instead.
func (*SubmitJamkrindoCalonRequest) Descriptor() ([]byte, []int) {
	return file_delivery_proto_3party_3party_proto_rawDescGZIP(), []int{14}
}

func (x *SubmitJamkrindoCalonRequest) GetAlamatDebitur() string {
	if x != nil {
		return x.AlamatDebitur
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetAlamatUsaha() string {
	if x != nil {
		return x.AlamatUsaha
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetCabangRekanan() string {
	if x != nil {
		return x.CabangRekanan
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetCif() string {
	if x != nil {
		return x.Cif
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetCoverage() string {
	if x != nil {
		return x.Coverage
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetFlagTransfer() string {
	if x != nil {
		return x.FlagTransfer
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetIDCalonDebiturKur() string {
	if x != nil {
		return x.IDCalonDebiturKur
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetJangkaWaktu() string {
	if x != nil {
		return x.JangkaWaktu
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetJenisAgunan() string {
	if x != nil {
		return x.JenisAgunan
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetJenisIdentitas() string {
	if x != nil {
		return x.JenisIdentitas
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetJenisKelamin() string {
	if x != nil {
		return x.JenisKelamin
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetJenisKredit() string {
	if x != nil {
		return x.JenisKredit
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetJenisKur() string {
	if x != nil {
		return x.JenisKur
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetJenisLinkage() string {
	if x != nil {
		return x.JenisLinkage
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetJenisPengikatan() string {
	if x != nil {
		return x.JenisPengikatan
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetJmlTKerja() string {
	if x != nil {
		return x.JmlTKerja
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetKodeBank() string {
	if x != nil {
		return x.KodeBank
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetKodePekerjaan() string {
	if x != nil {
		return x.KodePekerjaan
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetKodePos() string {
	if x != nil {
		return x.KodePos
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetKodeSektor() string {
	if x != nil {
		return x.KodeSektor
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetKodeUker() string {
	if x != nil {
		return x.KodeUker
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetLembagaLinkage() string {
	if x != nil {
		return x.LembagaLinkage
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetModalUsaha() string {
	if x != nil {
		return x.ModalUsaha
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetNamaDebitur() string {
	if x != nil {
		return x.NamaDebitur
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetNilaiAgunan() string {
	if x != nil {
		return x.NilaiAgunan
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetNoHp() string {
	if x != nil {
		return x.NoHp
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetNoIdentitas() string {
	if x != nil {
		return x.NoIdentitas
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetNoIjinUsaha() string {
	if x != nil {
		return x.NoIjinUsaha
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetNoPk() string {
	if x != nil {
		return x.NoPk
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetNoRekening() string {
	if x != nil {
		return x.NoRekening
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetNoTelepon() string {
	if x != nil {
		return x.NoTelepon
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetNomorAplikasi() string {
	if x != nil {
		return x.NomorAplikasi
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetNpwp() string {
	if x != nil {
		return x.Npwp
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetPlafonKredit() string {
	if x != nil {
		return x.PlafonKredit
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetStatusAplikasi() string {
	if x != nil {
		return x.StatusAplikasi
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetStatusKolektibilitas() string {
	if x != nil {
		return x.StatusKolektibilitas
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetStatusLunas() string {
	if x != nil {
		return x.StatusLunas
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetSukuBunga() string {
	if x != nil {
		return x.SukuBunga
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetTanggalAkhir() string {
	if x != nil {
		return x.TanggalAkhir
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetTanggalAwal() string {
	if x != nil {
		return x.TanggalAwal
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetTanggalLahir() string {
	if x != nil {
		return x.TanggalLahir
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetTanggalMulaiUsaha() string {
	if x != nil {
		return x.TanggalMulaiUsaha
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetTanggalPk() string {
	if x != nil {
		return x.TanggalPk
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetTanggalRekam() string {
	if x != nil {
		return x.TanggalRekam
	}
	return ""
}

func (x *SubmitJamkrindoCalonRequest) GetUsahaProduktif() string {
	if x != nil {
		return x.UsahaProduktif
	}
	return ""
}

type SubmitJamkrindoCalonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                        int64                          `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message                       string                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	MessageLocal                  string                         `protobuf:"bytes,3,opt,name=messageLocal,proto3" json:"messageLocal,omitempty"`
	EmbedDatasubmitJamkrindoCalon *EmbedDatasubmitJamkrindoCalon `protobuf:"bytes,4,opt,name=EmbedDatasubmitJamkrindoCalon,proto3" json:"EmbedDatasubmitJamkrindoCalon,omitempty"`
}

func (x *SubmitJamkrindoCalonResponse) Reset() {
	*x = SubmitJamkrindoCalonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_proto_3party_3party_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitJamkrindoCalonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitJamkrindoCalonResponse) ProtoMessage() {}

func (x *SubmitJamkrindoCalonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_proto_3party_3party_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitJamkrindoCalonResponse.ProtoReflect.Descriptor instead.
func (*SubmitJamkrindoCalonResponse) Descriptor() ([]byte, []int) {
	return file_delivery_proto_3party_3party_proto_rawDescGZIP(), []int{15}
}

func (x *SubmitJamkrindoCalonResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SubmitJamkrindoCalonResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SubmitJamkrindoCalonResponse) GetMessageLocal() string {
	if x != nil {
		return x.MessageLocal
	}
	return ""
}

func (x *SubmitJamkrindoCalonResponse) GetEmbedDatasubmitJamkrindoCalon() *EmbedDatasubmitJamkrindoCalon {
	if x != nil {
		return x.EmbedDatasubmitJamkrindoCalon
	}
	return nil
}

type EmbedDatasubmitJamkrindoCalon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode               int64                       `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	StatusDescription        string                      `protobuf:"bytes,2,opt,name=statusDescription,proto3" json:"statusDescription,omitempty"`
	DatasubmitJamkrindoCalon []*DatasubmitJamkrindoCalon `protobuf:"bytes,3,rep,name=DatasubmitJamkrindoCalon,proto3" json:"DatasubmitJamkrindoCalon,omitempty"`
}

func (x *EmbedDatasubmitJamkrindoCalon) Reset() {
	*x = EmbedDatasubmitJamkrindoCalon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_proto_3party_3party_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbedDatasubmitJamkrindoCalon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbedDatasubmitJamkrindoCalon) ProtoMessage() {}

func (x *EmbedDatasubmitJamkrindoCalon) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_proto_3party_3party_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbedDatasubmitJamkrindoCalon.ProtoReflect.Descriptor instead.
func (*EmbedDatasubmitJamkrindoCalon) Descriptor() ([]byte, []int) {
	return file_delivery_proto_3party_3party_proto_rawDescGZIP(), []int{16}
}

func (x *EmbedDatasubmitJamkrindoCalon) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *EmbedDatasubmitJamkrindoCalon) GetStatusDescription() string {
	if x != nil {
		return x.StatusDescription
	}
	return ""
}

func (x *EmbedDatasubmitJamkrindoCalon) GetDatasubmitJamkrindoCalon() []*DatasubmitJamkrindoCalon {
	if x != nil {
		return x.DatasubmitJamkrindoCalon
	}
	return nil
}

type DatasubmitJamkrindoCalon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoIjinPrinsip  string `protobuf:"bytes,1,opt,name=NoIjinPrinsip,proto3" json:"NoIjinPrinsip,omitempty"`
	NoSertifikat   string `protobuf:"bytes,2,opt,name=NoSertifikat,proto3" json:"NoSertifikat,omitempty"`
	NomorUrut      string `protobuf:"bytes,3,opt,name=NomorUrut,proto3" json:"NomorUrut,omitempty"`
	TglIjinPrinsip string `protobuf:"bytes,4,opt,name=TglIjinPrinsip,proto3" json:"TglIjinPrinsip,omitempty"`
	TglSertifikat  string `protobuf:"bytes,5,opt,name=TglSertifikat,proto3" json:"TglSertifikat,omitempty"`
}

func (x *DatasubmitJamkrindoCalon) Reset() {
	*x = DatasubmitJamkrindoCalon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_proto_3party_3party_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasubmitJamkrindoCalon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasubmitJamkrindoCalon) ProtoMessage() {}

func (x *DatasubmitJamkrindoCalon) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_proto_3party_3party_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasubmitJamkrindoCalon.ProtoReflect.Descriptor instead.
func (*DatasubmitJamkrindoCalon) Descriptor() ([]byte, []int) {
	return file_delivery_proto_3party_3party_proto_rawDescGZIP(), []int{17}
}

func (x *DatasubmitJamkrindoCalon) GetNoIjinPrinsip() string {
	if x != nil {
		return x.NoIjinPrinsip
	}
	return ""
}

func (x *DatasubmitJamkrindoCalon) GetNoSertifikat() string {
	if x != nil {
		return x.NoSertifikat
	}
	return ""
}

func (x *DatasubmitJamkrindoCalon) GetNomorUrut() string {
	if x != nil {
		return x.NomorUrut
	}
	return ""
}

func (x *DatasubmitJamkrindoCalon) GetTglIjinPrinsip() string {
	if x != nil {
		return x.TglIjinPrinsip
	}
	return ""
}

func (x *DatasubmitJamkrindoCalon) GetTglSertifikat() string {
	if x != nil {
		return x.TglSertifikat
	}
	return ""
}

var File_delivery_proto_3party_3party_proto protoreflect.FileDescriptor

var file_delivery_proto_3party_3party_proto_rawDesc = []byte{
	0x0a, 0x22, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x33, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x33, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x24, 0x0a, 0x0e, 0x54,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x22, 0x29, 0x0a, 0x0f, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4f, 0x0a, 0x17,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x49, 0x4b, 0x50,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x6b, 0x74, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6b, 0x74, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xcf, 0x01,
	0x0a, 0x17, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x49,
	0x4b, 0x50, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x12,
	0x5e, 0x0a, 0x19, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x49, 0x4b, 0x50, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x49, 0x4b, 0x50, 0x52, 0x19, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x49, 0x4b, 0x50, 0x22,
	0xba, 0x01, 0x0a, 0x19, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x49, 0x4b, 0x50, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a,
	0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4f, 0x0a, 0x14, 0x44,
	0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x49, 0x4b, 0x50, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x49, 0x4b, 0x50, 0x52, 0x14, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x49, 0x4b, 0x50, 0x22, 0x52, 0x0a, 0x14,
	0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x49, 0x4b, 0x50, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x22, 0x4f, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x66, 0x6f, 0x6e, 0x64,
	0x53, 0x49, 0x4b, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x74, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x74, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0xcf, 0x01, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x66, 0x6f,
	0x6e, 0x64, 0x53, 0x49, 0x4b, 0x50, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x12, 0x5e, 0x0a, 0x19, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x66, 0x6f, 0x6e, 0x64, 0x53, 0x49, 0x4b, 0x50,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x6c, 0x61,
	0x66, 0x6f, 0x6e, 0x64, 0x53, 0x49, 0x4b, 0x50, 0x52, 0x19, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x66, 0x6f, 0x6e, 0x64, 0x53,
	0x49, 0x4b, 0x50, 0x22, 0xba, 0x01, 0x0a, 0x19, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x66, 0x6f, 0x6e, 0x64, 0x53, 0x49, 0x4b,
	0x50, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x4f, 0x0a, 0x14, 0x44, 0x61, 0x74, 0x61, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x66,
	0x6f, 0x6e, 0x64, 0x53, 0x49, 0x4b, 0x50, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50,
	0x6c, 0x61, 0x66, 0x6f, 0x6e, 0x64, 0x53, 0x49, 0x4b, 0x50, 0x52, 0x14, 0x44, 0x61, 0x74, 0x61,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x66, 0x6f, 0x6e, 0x64, 0x53, 0x49, 0x4b, 0x50,
	0x22, 0x88, 0x02, 0x0a, 0x14, 0x44, 0x61, 0x74, 0x61, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x6c,
	0x61, 0x66, 0x6f, 0x6e, 0x64, 0x53, 0x49, 0x4b, 0x50, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x74, 0x70,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x74,
	0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2e, 0x0a,
	0x12, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xe1, 0x09, 0x0a, 0x15,
	0x4a, 0x61, 0x6d, 0x6b, 0x72, 0x69, 0x6e, 0x64, 0x6f, 0x4b, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x61, 0x62, 0x61, 0x6e, 0x67, 0x52,
	0x65, 0x6b, 0x61, 0x6e, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x61,
	0x62, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x6b, 0x61, 0x6e, 0x61, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x4a,
	0x65, 0x6e, 0x69, 0x73, 0x41, 0x67, 0x75, 0x6e, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x41, 0x67, 0x75, 0x6e, 0x61, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x4b, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x4b, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x4b, 0x75, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x4b, 0x75, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x4a,
	0x65, 0x6e, 0x69, 0x73, 0x50, 0x65, 0x6e, 0x67, 0x69, 0x6b, 0x61, 0x74, 0x61, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x50, 0x65, 0x6e, 0x67, 0x69,
	0x6b, 0x61, 0x74, 0x61, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x4a, 0x75, 0x6d, 0x6c, 0x61, 0x68, 0x4b,
	0x65, 0x72, 0x75, 0x67, 0x69, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4a,
	0x75, 0x6d, 0x6c, 0x61, 0x68, 0x4b, 0x65, 0x72, 0x75, 0x67, 0x69, 0x61, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x4b, 0x6f, 0x64, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x4b, 0x6f, 0x64, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x4b, 0x6f, 0x64,
	0x65, 0x4c, 0x62, 0x75, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4b, 0x6f, 0x64, 0x65,
	0x4c, 0x62, 0x75, 0x12, 0x1a, 0x0a, 0x08, 0x4b, 0x6f, 0x64, 0x65, 0x55, 0x6b, 0x65, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4b, 0x6f, 0x64, 0x65, 0x55, 0x6b, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x4e, 0x61, 0x6d, 0x61, 0x44, 0x65, 0x62, 0x69, 0x74, 0x75, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x61, 0x6d, 0x61, 0x44, 0x65, 0x62, 0x69, 0x74, 0x75,
	0x72, 0x12, 0x28, 0x0a, 0x0f, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x50, 0x65, 0x6e, 0x67, 0x69, 0x6b,
	0x61, 0x74, 0x61, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4e, 0x69, 0x6c, 0x61,
	0x69, 0x50, 0x65, 0x6e, 0x67, 0x69, 0x6b, 0x61, 0x74, 0x61, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x4e,
	0x69, 0x6c, 0x61, 0x69, 0x50, 0x65, 0x6e, 0x6a, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x50, 0x65, 0x6e, 0x6a, 0x61,
	0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x50, 0x65,
	0x72, 0x73, 0x65, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x69, 0x6c, 0x61,
	0x69, 0x50, 0x65, 0x72, 0x73, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x4e, 0x69, 0x6c, 0x61, 0x69,
	0x54, 0x75, 0x6e, 0x74, 0x75, 0x74, 0x61, 0x6e, 0x4b, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x54, 0x75, 0x6e, 0x74, 0x75, 0x74,
	0x61, 0x6e, 0x4b, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x6f, 0x52, 0x65, 0x6b,
	0x65, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4e, 0x6f, 0x52,
	0x65, 0x6b, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x53, 0x70, 0x32,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4e, 0x6f, 0x53, 0x70, 0x32, 0x12, 0x14, 0x0a,
	0x05, 0x4e, 0x6f, 0x53, 0x70, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4e, 0x6f,
	0x53, 0x70, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x6f, 0x6d, 0x6f, 0x72, 0x50, 0x6b, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4e, 0x6f, 0x6d, 0x6f, 0x72, 0x50, 0x6b, 0x12, 0x2a, 0x0a,
	0x10, 0x4e, 0x6f, 0x6d, 0x6f, 0x72, 0x53, 0x73, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x6b, 0x61,
	0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x4e, 0x6f, 0x6d, 0x6f, 0x72, 0x53, 0x73,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x6b, 0x61, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x50, 0x65, 0x6e,
	0x67, 0x67, 0x75, 0x6e, 0x61, 0x61, 0x6e, 0x4b, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x50, 0x65, 0x6e, 0x67, 0x67, 0x75, 0x6e, 0x61, 0x61, 0x6e, 0x4b,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x65,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x50, 0x6c, 0x61, 0x66, 0x6f, 0x6e, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x50, 0x6c, 0x61, 0x66, 0x6f, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x62,
	0x61, 0x62, 0x4b, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53,
	0x65, 0x62, 0x61, 0x62, 0x4b, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x67, 0x6c,
	0x4a, 0x61, 0x74, 0x75, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x54, 0x67, 0x6c, 0x4a, 0x61, 0x74, 0x75, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x54, 0x67, 0x6c, 0x4d, 0x75, 0x6c, 0x61, 0x69, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x54, 0x67, 0x6c, 0x4d, 0x75, 0x6c, 0x61, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x54,
	0x67, 0x6c, 0x53, 0x70, 0x32, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x67, 0x6c,
	0x53, 0x70, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x67, 0x6c, 0x53, 0x70, 0x6b, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x67, 0x6c, 0x53, 0x70, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x54,
	0x67, 0x6c, 0x53, 0x73, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x6b, 0x61, 0x74, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x54, 0x67, 0x6c, 0x53, 0x73, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x6b, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x67, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x67, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6e, 0x64, 0x61, 0x6b, 0x61, 0x6e, 0x31, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69, 0x6e, 0x64, 0x61, 0x6b, 0x61, 0x6e, 0x31, 0x12,
	0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6e, 0x64, 0x61, 0x6b, 0x61, 0x6e, 0x32, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x54, 0x69, 0x6e, 0x64, 0x61, 0x6b, 0x61, 0x6e, 0x32, 0x12, 0x1c, 0x0a,
	0x09, 0x54, 0x69, 0x6e, 0x64, 0x61, 0x6b, 0x61, 0x6e, 0x33, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x54, 0x69, 0x6e, 0x64, 0x61, 0x6b, 0x61, 0x6e, 0x33, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x69, 0x6e, 0x64, 0x61, 0x6b, 0x61, 0x6e, 0x34, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x54, 0x69, 0x6e, 0x64, 0x61, 0x6b, 0x61, 0x6e, 0x34, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6e,
	0x64, 0x61, 0x6b, 0x61, 0x6e, 0x35, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69,
	0x6e, 0x64, 0x61, 0x6b, 0x61, 0x6e, 0x35, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x75, 0x6e, 0x67, 0x67,
	0x61, 0x6b, 0x61, 0x6e, 0x42, 0x75, 0x6e, 0x67, 0x61, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x54, 0x75, 0x6e, 0x67, 0x67, 0x61, 0x6b, 0x61, 0x6e, 0x42, 0x75, 0x6e, 0x67, 0x61, 0x12,
	0x26, 0x0a, 0x0e, 0x54, 0x75, 0x6e, 0x67, 0x67, 0x61, 0x6b, 0x61, 0x6e, 0x44, 0x65, 0x6e, 0x64,
	0x61, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x54, 0x75, 0x6e, 0x67, 0x67, 0x61, 0x6b,
	0x61, 0x6e, 0x44, 0x65, 0x6e, 0x64, 0x61, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x75, 0x6e, 0x67, 0x67,
	0x61, 0x6b, 0x61, 0x6e, 0x50, 0x6f, 0x6b, 0x6f, 0x6b, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x54, 0x75, 0x6e, 0x67, 0x67, 0x61, 0x6b, 0x61, 0x6e, 0x50, 0x6f, 0x6b, 0x6f, 0x6b, 0x22,
	0xbc, 0x01, 0x0a, 0x16, 0x4a, 0x61, 0x6d, 0x6b, 0x72, 0x69, 0x6e, 0x64, 0x6f, 0x4b, 0x6c, 0x61,
	0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x12, 0x4c, 0x0a, 0x13, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x4a, 0x61, 0x6d, 0x6b, 0x72, 0x69, 0x6e,
	0x64, 0x6f, 0x4b, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x4a, 0x61, 0x6d, 0x6b, 0x72,
	0x69, 0x6e, 0x64, 0x6f, 0x4b, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x13, 0x45, 0x6d, 0x62, 0x65, 0x64,
	0x4a, 0x61, 0x6d, 0x6b, 0x72, 0x69, 0x6e, 0x64, 0x6f, 0x4b, 0x6c, 0x61, 0x69, 0x6d, 0x22, 0xae,
	0x01, 0x0a, 0x13, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x4a, 0x61, 0x6d, 0x6b, 0x72, 0x69, 0x6e, 0x64,
	0x6f, 0x4b, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x12, 0x44, 0x61, 0x74, 0x61, 0x4a, 0x61, 0x6d, 0x6b,
	0x72, 0x69, 0x6e, 0x64, 0x6f, 0x4b, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4a, 0x61, 0x6d,
	0x6b, 0x72, 0x69, 0x6e, 0x64, 0x6f, 0x4b, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x12, 0x44, 0x61, 0x74,
	0x61, 0x4a, 0x61, 0x6d, 0x6b, 0x72, 0x69, 0x6e, 0x64, 0x6f, 0x4b, 0x6c, 0x61, 0x69, 0x6d, 0x22,
	0x82, 0x01, 0x0a, 0x12, 0x44, 0x61, 0x74, 0x61, 0x4a, 0x61, 0x6d, 0x6b, 0x72, 0x69, 0x6e, 0x64,
	0x6f, 0x4b, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x6c, 0x61, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x6c, 0x61, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x4e, 0x6f, 0x6d, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4e, 0x6f,
	0x6d, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x67,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x4b, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x54, 0x67, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x4b,
	0x6c, 0x61, 0x69, 0x6d, 0x22, 0x8f, 0x0c, 0x0a, 0x1b, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4a,
	0x61, 0x6d, 0x6b, 0x72, 0x69, 0x6e, 0x64, 0x6f, 0x43, 0x61, 0x6c, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x44, 0x65,
	0x62, 0x69, 0x74, 0x75, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x6c, 0x61,
	0x6d, 0x61, 0x74, 0x44, 0x65, 0x62, 0x69, 0x74, 0x75, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x6c,
	0x61, 0x6d, 0x61, 0x74, 0x55, 0x73, 0x61, 0x68, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x41, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x55, 0x73, 0x61, 0x68, 0x61, 0x12, 0x24, 0x0a, 0x0d,
	0x43, 0x61, 0x62, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x6b, 0x61, 0x6e, 0x61, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x61, 0x62, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x6b, 0x61, 0x6e,
	0x61, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x69, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x43, 0x69, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x46, 0x6c, 0x61, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x6c, 0x61, 0x67, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x44, 0x43, 0x61, 0x6c, 0x6f, 0x6e, 0x44,
	0x65, 0x62, 0x69, 0x74, 0x75, 0x72, 0x4b, 0x75, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x49, 0x44, 0x43, 0x61, 0x6c, 0x6f, 0x6e, 0x44, 0x65, 0x62, 0x69, 0x74, 0x75, 0x72, 0x4b,
	0x75, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x4a, 0x61, 0x6e, 0x67, 0x6b, 0x61, 0x57, 0x61, 0x6b, 0x74,
	0x75, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4a, 0x61, 0x6e, 0x67, 0x6b, 0x61, 0x57,
	0x61, 0x6b, 0x74, 0x75, 0x12, 0x20, 0x0a, 0x0b, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x41, 0x67, 0x75,
	0x6e, 0x61, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4a, 0x65, 0x6e, 0x69, 0x73,
	0x41, 0x67, 0x75, 0x6e, 0x61, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x61, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x4a, 0x65, 0x6e, 0x69, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x61, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x4b, 0x65, 0x6c, 0x61, 0x6d, 0x69, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x4b, 0x65, 0x6c, 0x61, 0x6d,
	0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x4b, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x4b, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x4b, 0x75, 0x72,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x4b, 0x75, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x4c, 0x69, 0x6e,
	0x6b, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x50, 0x65, 0x6e,
	0x67, 0x69, 0x6b, 0x61, 0x74, 0x61, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4a,
	0x65, 0x6e, 0x69, 0x73, 0x50, 0x65, 0x6e, 0x67, 0x69, 0x6b, 0x61, 0x74, 0x61, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x4a, 0x6d, 0x6c, 0x54, 0x4b, 0x65, 0x72, 0x6a, 0x61, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x4a, 0x6d, 0x6c, 0x54, 0x4b, 0x65, 0x72, 0x6a, 0x61, 0x12, 0x1a, 0x0a, 0x08,
	0x4b, 0x6f, 0x64, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4b, 0x6f, 0x64, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x12, 0x24, 0x0a, 0x0d, 0x4b, 0x6f, 0x64, 0x65,
	0x50, 0x65, 0x6b, 0x65, 0x72, 0x6a, 0x61, 0x61, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x4b, 0x6f, 0x64, 0x65, 0x50, 0x65, 0x6b, 0x65, 0x72, 0x6a, 0x61, 0x61, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x4b, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4b, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x4b, 0x6f, 0x64, 0x65,
	0x53, 0x65, 0x6b, 0x74, 0x6f, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4b, 0x6f,
	0x64, 0x65, 0x53, 0x65, 0x6b, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x4b, 0x6f, 0x64, 0x65,
	0x55, 0x6b, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4b, 0x6f, 0x64, 0x65,
	0x55, 0x6b, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x4c, 0x65, 0x6d, 0x62, 0x61, 0x67, 0x61, 0x4c,
	0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4c, 0x65,
	0x6d, 0x62, 0x61, 0x67, 0x61, 0x4c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x4d, 0x6f, 0x64, 0x61, 0x6c, 0x55, 0x73, 0x61, 0x68, 0x61, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x4d, 0x6f, 0x64, 0x61, 0x6c, 0x55, 0x73, 0x61, 0x68, 0x61, 0x12, 0x20, 0x0a, 0x0b,
	0x4e, 0x61, 0x6d, 0x61, 0x44, 0x65, 0x62, 0x69, 0x74, 0x75, 0x72, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x4e, 0x61, 0x6d, 0x61, 0x44, 0x65, 0x62, 0x69, 0x74, 0x75, 0x72, 0x12, 0x20,
	0x0a, 0x0b, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x67, 0x75, 0x6e, 0x61, 0x6e, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x69, 0x6c, 0x61, 0x69, 0x41, 0x67, 0x75, 0x6e, 0x61, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x48, 0x70, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x6f, 0x48, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x6f, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x61, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x6f, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x61, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x6f, 0x49, 0x6a, 0x69, 0x6e,
	0x55, 0x73, 0x61, 0x68, 0x61, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x6f, 0x49,
	0x6a, 0x69, 0x6e, 0x55, 0x73, 0x61, 0x68, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x50, 0x6b,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x6f, 0x50, 0x6b, 0x12, 0x1e, 0x0a, 0x0a,
	0x4e, 0x6f, 0x52, 0x65, 0x6b, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x4e, 0x6f, 0x52, 0x65, 0x6b, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x4e, 0x6f, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x4e, 0x6f, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x4e, 0x6f,
	0x6d, 0x6f, 0x72, 0x41, 0x70, 0x6c, 0x69, 0x6b, 0x61, 0x73, 0x69, 0x18, 0x20, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x4e, 0x6f, 0x6d, 0x6f, 0x72, 0x41, 0x70, 0x6c, 0x69, 0x6b, 0x61, 0x73, 0x69,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x70, 0x77, 0x70, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x70, 0x77, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x66, 0x6f, 0x6e, 0x4b, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x6c, 0x61, 0x66,
	0x6f, 0x6e, 0x4b, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x41, 0x70, 0x6c, 0x69, 0x6b, 0x61, 0x73, 0x69, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x70, 0x6c, 0x69, 0x6b, 0x61, 0x73, 0x69,
	0x12, 0x32, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4b, 0x6f, 0x6c, 0x65, 0x6b, 0x74,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x61, 0x73, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4b, 0x6f, 0x6c, 0x65, 0x6b, 0x74, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x61, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x75,
	0x6e, 0x61, 0x73, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4c, 0x75, 0x6e, 0x61, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x75, 0x6b, 0x75, 0x42, 0x75,
	0x6e, 0x67, 0x61, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x75, 0x6b, 0x75, 0x42,
	0x75, 0x6e, 0x67, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x41,
	0x6b, 0x68, 0x69, 0x72, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x6e, 0x67,
	0x67, 0x61, 0x6c, 0x41, 0x6b, 0x68, 0x69, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x6e, 0x67,
	0x67, 0x61, 0x6c, 0x41, 0x77, 0x61, 0x6c, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54,
	0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x41, 0x77, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61,
	0x6e, 0x67, 0x67, 0x61, 0x6c, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x54, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x12, 0x2c,
	0x0a, 0x11, 0x54, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x4d, 0x75, 0x6c, 0x61, 0x69, 0x55, 0x73,
	0x61, 0x68, 0x61, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x54, 0x61, 0x6e, 0x67, 0x67,
	0x61, 0x6c, 0x4d, 0x75, 0x6c, 0x61, 0x69, 0x55, 0x73, 0x61, 0x68, 0x61, 0x12, 0x1c, 0x0a, 0x09,
	0x54, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x50, 0x6b, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x54, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x50, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61,
	0x6e, 0x67, 0x67, 0x61, 0x6c, 0x52, 0x65, 0x6b, 0x61, 0x6d, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x54, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x52, 0x65, 0x6b, 0x61, 0x6d, 0x12, 0x26,
	0x0a, 0x0e, 0x55, 0x73, 0x61, 0x68, 0x61, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x6b, 0x74, 0x69, 0x66,
	0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x55, 0x73, 0x61, 0x68, 0x61, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x6b, 0x74, 0x69, 0x66, 0x22, 0xe0, 0x01, 0x0a, 0x1c, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x4a, 0x61, 0x6d, 0x6b, 0x72, 0x69, 0x6e, 0x64, 0x6f, 0x43, 0x61, 0x6c, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x6a, 0x0a,
	0x1d, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x4a, 0x61, 0x6d, 0x6b, 0x72, 0x69, 0x6e, 0x64, 0x6f, 0x43, 0x61, 0x6c, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x62,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4a, 0x61, 0x6d, 0x6b,
	0x72, 0x69, 0x6e, 0x64, 0x6f, 0x43, 0x61, 0x6c, 0x6f, 0x6e, 0x52, 0x1d, 0x45, 0x6d, 0x62, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4a, 0x61, 0x6d, 0x6b, 0x72,
	0x69, 0x6e, 0x64, 0x6f, 0x43, 0x61, 0x6c, 0x6f, 0x6e, 0x22, 0xca, 0x01, 0x0a, 0x1d, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4a, 0x61, 0x6d,
	0x6b, 0x72, 0x69, 0x6e, 0x64, 0x6f, 0x43, 0x61, 0x6c, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5b, 0x0a, 0x18, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4a, 0x61, 0x6d, 0x6b, 0x72, 0x69, 0x6e, 0x64, 0x6f,
	0x43, 0x61, 0x6c, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4a, 0x61,
	0x6d, 0x6b, 0x72, 0x69, 0x6e, 0x64, 0x6f, 0x43, 0x61, 0x6c, 0x6f, 0x6e, 0x52, 0x18, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4a, 0x61, 0x6d, 0x6b, 0x72, 0x69, 0x6e, 0x64,
	0x6f, 0x43, 0x61, 0x6c, 0x6f, 0x6e, 0x22, 0xd0, 0x01, 0x0a, 0x18, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x4a, 0x61, 0x6d, 0x6b, 0x72, 0x69, 0x6e, 0x64, 0x6f, 0x43, 0x61,
	0x6c, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x4e, 0x6f, 0x49, 0x6a, 0x69, 0x6e, 0x50, 0x72, 0x69,
	0x6e, 0x73, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4e, 0x6f, 0x49, 0x6a,
	0x69, 0x6e, 0x50, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x4e, 0x6f, 0x53,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x6b, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x4e, 0x6f, 0x53, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x6b, 0x61, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x4e, 0x6f, 0x6d, 0x6f, 0x72, 0x55, 0x72, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x4e, 0x6f, 0x6d, 0x6f, 0x72, 0x55, 0x72, 0x75, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x54,
	0x67, 0x6c, 0x49, 0x6a, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x54, 0x67, 0x6c, 0x49, 0x6a, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x6e,
	0x73, 0x69, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x67, 0x6c, 0x53, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x6b, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x67, 0x6c, 0x53,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x6b, 0x61, 0x74, 0x32, 0xa5, 0x03, 0x0a, 0x11, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x38, 0x0a, 0x07, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x10, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x49, 0x4b, 0x50, 0x12, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x49, 0x4b, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x49, 0x4b, 0x50, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a,
	0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x66, 0x6f, 0x6e, 0x64, 0x53, 0x49, 0x4b,
	0x50, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50,
	0x6c, 0x61, 0x66, 0x6f, 0x6e, 0x64, 0x53, 0x49, 0x4b, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50,
	0x6c, 0x61, 0x66, 0x6f, 0x6e, 0x64, 0x53, 0x49, 0x4b, 0x50, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5f, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4a, 0x61, 0x6d, 0x6b, 0x72,
	0x69, 0x6e, 0x64, 0x6f, 0x43, 0x61, 0x6c, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4a, 0x61, 0x6d, 0x6b, 0x72, 0x69, 0x6e, 0x64,
	0x6f, 0x43, 0x61, 0x6c, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4a, 0x61, 0x6d, 0x6b,
	0x72, 0x69, 0x6e, 0x64, 0x6f, 0x43, 0x61, 0x6c, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x4a, 0x61, 0x6d, 0x6b, 0x72, 0x69, 0x6e, 0x64, 0x6f, 0x4b,
	0x6c, 0x61, 0x69, 0x6d, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a, 0x61, 0x6d,
	0x6b, 0x72, 0x69, 0x6e, 0x64, 0x6f, 0x4b, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a, 0x61, 0x6d, 0x6b, 0x72,
	0x69, 0x6e, 0x64, 0x6f, 0x4b, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x16, 0x5a, 0x14, 0x33, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_delivery_proto_3party_3party_proto_rawDescOnce sync.Once
	file_delivery_proto_3party_3party_proto_rawDescData = file_delivery_proto_3party_3party_proto_rawDesc
)

func file_delivery_proto_3party_3party_proto_rawDescGZIP() []byte {
	file_delivery_proto_3party_3party_proto_rawDescOnce.Do(func() {
		file_delivery_proto_3party_3party_proto_rawDescData = protoimpl.X.CompressGZIP(file_delivery_proto_3party_3party_proto_rawDescData)
	})
	return file_delivery_proto_3party_3party_proto_rawDescData
}

var file_delivery_proto_3party_3party_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_delivery_proto_3party_3party_proto_goTypes = []interface{}{
	(*TestingRequest)(nil),                // 0: proto.TestingRequest
	(*TestingResponse)(nil),               // 1: proto.TestingResponse
	(*VerificationSIKPRequest)(nil),       // 2: proto.VerificationSIKPRequest
	(*VerificationSIKPReponse)(nil),       // 3: proto.VerificationSIKPReponse
	(*EmbedDataVerificationSIKP)(nil),     // 4: proto.EmbedDataVerificationSIKP
	(*DataVerificationSIKP)(nil),          // 5: proto.DataVerificationSIKP
	(*CheckPlafondSIKPRequest)(nil),       // 6: proto.CheckPlafondSIKPRequest
	(*CheckPlafondSIKPReponse)(nil),       // 7: proto.CheckPlafondSIKPReponse
	(*EmbedDataCheckPlafondSIKP)(nil),     // 8: proto.EmbedDataCheckPlafondSIKP
	(*DataCheckPlafondSIKP)(nil),          // 9: proto.DataCheckPlafondSIKP
	(*JamkrindoKlaimRequest)(nil),         // 10: proto.JamkrindoKlaimRequest
	(*JamkrindoKlaimResponse)(nil),        // 11: proto.JamkrindoKlaimResponse
	(*EmbedJamkrindoKlaim)(nil),           // 12: proto.EmbedJamkrindoKlaim
	(*DataJamkrindoKlaim)(nil),            // 13: proto.DataJamkrindoKlaim
	(*SubmitJamkrindoCalonRequest)(nil),   // 14: proto.SubmitJamkrindoCalonRequest
	(*SubmitJamkrindoCalonResponse)(nil),  // 15: proto.SubmitJamkrindoCalonResponse
	(*EmbedDatasubmitJamkrindoCalon)(nil), // 16: proto.EmbedDatasubmitJamkrindoCalon
	(*DatasubmitJamkrindoCalon)(nil),      // 17: proto.DatasubmitJamkrindoCalon
}
var file_delivery_proto_3party_3party_proto_depIdxs = []int32{
	4,  // 0: proto.VerificationSIKPReponse.EmbedDataVerificationSIKP:type_name -> proto.EmbedDataVerificationSIKP
	5,  // 1: proto.EmbedDataVerificationSIKP.DataVerificationSIKP:type_name -> proto.DataVerificationSIKP
	8,  // 2: proto.CheckPlafondSIKPReponse.EmbedDataCheckPlafondSIKP:type_name -> proto.EmbedDataCheckPlafondSIKP
	9,  // 3: proto.EmbedDataCheckPlafondSIKP.DataCheckPlafondSIKP:type_name -> proto.DataCheckPlafondSIKP
	12, // 4: proto.JamkrindoKlaimResponse.EmbedJamkrindoKlaim:type_name -> proto.EmbedJamkrindoKlaim
	13, // 5: proto.EmbedJamkrindoKlaim.DataJamkrindoKlaim:type_name -> proto.DataJamkrindoKlaim
	16, // 6: proto.SubmitJamkrindoCalonResponse.EmbedDatasubmitJamkrindoCalon:type_name -> proto.EmbedDatasubmitJamkrindoCalon
	17, // 7: proto.EmbedDatasubmitJamkrindoCalon.DatasubmitJamkrindoCalon:type_name -> proto.DatasubmitJamkrindoCalon
	0,  // 8: proto.ThirdPartyService.Testing:input_type -> proto.TestingRequest
	2,  // 9: proto.ThirdPartyService.VerificationSIKP:input_type -> proto.VerificationSIKPRequest
	6,  // 10: proto.ThirdPartyService.CheckPlafondSIKP:input_type -> proto.CheckPlafondSIKPRequest
	14, // 11: proto.ThirdPartyService.SubmitJamkrindoCalon:input_type -> proto.SubmitJamkrindoCalonRequest
	10, // 12: proto.ThirdPartyService.JamkrindoKlaim:input_type -> proto.JamkrindoKlaimRequest
	1,  // 13: proto.ThirdPartyService.Testing:output_type -> proto.TestingResponse
	3,  // 14: proto.ThirdPartyService.VerificationSIKP:output_type -> proto.VerificationSIKPReponse
	7,  // 15: proto.ThirdPartyService.CheckPlafondSIKP:output_type -> proto.CheckPlafondSIKPReponse
	15, // 16: proto.ThirdPartyService.SubmitJamkrindoCalon:output_type -> proto.SubmitJamkrindoCalonResponse
	11, // 17: proto.ThirdPartyService.JamkrindoKlaim:output_type -> proto.JamkrindoKlaimResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_delivery_proto_3party_3party_proto_init() }
func file_delivery_proto_3party_3party_proto_init() {
	if File_delivery_proto_3party_3party_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_delivery_proto_3party_3party_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_proto_3party_3party_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_proto_3party_3party_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationSIKPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_proto_3party_3party_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationSIKPReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_proto_3party_3party_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbedDataVerificationSIKP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_proto_3party_3party_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataVerificationSIKP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_proto_3party_3party_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPlafondSIKPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_proto_3party_3party_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPlafondSIKPReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_proto_3party_3party_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbedDataCheckPlafondSIKP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_proto_3party_3party_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataCheckPlafondSIKP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_proto_3party_3party_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JamkrindoKlaimRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_proto_3party_3party_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JamkrindoKlaimResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_proto_3party_3party_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbedJamkrindoKlaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_proto_3party_3party_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataJamkrindoKlaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_proto_3party_3party_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitJamkrindoCalonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_proto_3party_3party_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitJamkrindoCalonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_proto_3party_3party_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbedDatasubmitJamkrindoCalon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_proto_3party_3party_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasubmitJamkrindoCalon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_delivery_proto_3party_3party_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_delivery_proto_3party_3party_proto_goTypes,
		DependencyIndexes: file_delivery_proto_3party_3party_proto_depIdxs,
		MessageInfos:      file_delivery_proto_3party_3party_proto_msgTypes,
	}.Build()
	File_delivery_proto_3party_3party_proto = out.File
	file_delivery_proto_3party_3party_proto_rawDesc = nil
	file_delivery_proto_3party_3party_proto_goTypes = nil
	file_delivery_proto_3party_3party_proto_depIdxs = nil
}
